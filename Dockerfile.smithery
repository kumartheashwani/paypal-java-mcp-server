FROM eclipse-temurin:17-jre-alpine

WORKDIR /app

# Copy the JAR file
COPY target/paypal-java-mcp-server-0.0.1-SNAPSHOT-stdio.jar /app/app.jar

# Create a log directory
RUN mkdir -p /logs && chmod 777 /logs

# Set environment variables
ENV SPRING_PROFILES_ACTIVE=stdio
ENV LOG_FILE=/logs/mcp-server.log
ENV LOG_LEVEL_COM_EXAMPLE_MCPSERVER=DEBUG
ENV LOGGING_PATTERN_CONSOLE=
ENV SPRING_JMX_ENABLED=false
ENV SPRING_MAIN_WEB_APPLICATION_TYPE=none
ENV SPRING_MVC_ASYNC_REQUEST_TIMEOUT=60s

# IMPORTANT: This container MUST be run with the -i flag (interactive mode)
# to provide stdin/stdout connectivity for the JSON-RPC stdio interface
# Example: docker run -i paypal-mcp-jsonrpc

# The command will be provided by Smithery configuration
# Smithery will run: java -Dspring.profiles.active=stdio -DLOG_FILE=/logs/mcp-server.log -jar /app/app.jar
# But we also set these as environment variables for redundancy

# Set stdin to be open even if not attached and make sure we're using a tty
# This helps ensure the container can receive input even in some non-interactive environments
ENTRYPOINT ["java", \
  "-Dspring.profiles.active=stdio", \
  "-Dspring.main.web-application-type=NONE", \
  "-DLOG_FILE=/logs/mcp-server.log", \
  "-DLOG_LEVEL_COM_EXAMPLE_MCPSERVER=DEBUG", \
  "-Dlogging.pattern.console=", \
  "-Dlogging.config=classpath:logback-stdio.xml", \
  "-Dspring.jmx.enabled=false", \
  "-Dspring.main.lazy-initialization=true", \
  "-Dspring.mvc.async.request-timeout=60s", \
  "-Djsonrpc.stdio.interactive=true", \
  "-jar", "/app/app.jar"]

# Ensure the container knows it should be run interactively
STOPSIGNAL SIGINT